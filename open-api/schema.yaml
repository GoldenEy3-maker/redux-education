openapi: 3.0.0
info:
  title: API
  version: 1.0.0
  description: API

servers:
  - url: http://localhost:3000/api
    description: Local

paths:
  /v1/login:
    post:
      operationId: login
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - accessToken
                  - refreshToken
                  - userInfo
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  userInfo:
                    $ref: "#/components/schemas/User"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/register:
    post:
      operationId: register
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string
                surname:
                  type: string
                patronymic:
                  type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/refresh:
    post:
      operationId: refresh
      summary: Refresh
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - accessToken
                  - refreshToken
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/logout:
    post:
      operationId: logout
      summary: Logout
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /v1/teams:
    post:
      operationId: createTeam
      summary: Create team
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    $ref: "#/components/schemas/Team"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      operationId: getTeams
      summary: Get teams
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"
  /v1/teams/{id}:
    get:
      operationId: getTeam
      summary: Get team
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteTeam
      summary: Delete team
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/teams/{id}/join:
    post:
      operationId: joinTeam
      summary: Join team
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/teams/{id}/leave:
    post:
      operationId: leaveTeam
      summary: Leave team
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
        - surname
        - email
      properties:
        id:
          type: string
        name:
          type: string
        surname:
          type: string
        patronymic:
          type: string
        email:
          type: string
    Team:
      type: object
      required:
        - id
        - name
        - authorId
        - members
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
        name:
          type: string
        authorId:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        members:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
    Error:
      type: object
      properties:
        message:
          type: string
        fields:
          type: object
          additionalProperties:
            type: string
